pyocd> write32 0x40029400 0x01234567
0089148 D _write_block32:000143 (ap=0x0; addr=0x40029400, size=1) { [ap]
0089148 D write_ap:000144 cached (ap=0x0; addr=0x00000000) = 0x23000012 [ap]
0089148 D write_ap:000145 (addr=0x00000004) = 0x40029400 [dap]
0089148 D [cmd:32] get_request_space(1, 05:w)[wc=0, rc=0, ba=1->1] -> (sz=1, free=14) [dap_access_cmsis_dap]
0089148 D [cmd:32] add(1, 05:w) -> [wc=1, rc=0, ba=1] [dap_access_cmsis_dap]
0089148 D trace: write_ap(addr=0x00000004, data=0x40029400) [cmsis_dap_probe]
0089148 D write_ap_multiple:000146 (addr=0x0000000c) = (1 values) [dap]
0089148 D [cmd:32] get_request_space(1, 0d:w)[wc=1, rc=0, ba=1->0] -> (sz=1, free=11, delta=-253) [dap_access_cmsis_dap]
0089148 D [cmd:32] add(1, 0d:w) -> [wc=2, rc=0, ba=0] [dap_access_cmsis_dap]
0089148 D trace: write_ap_multi(addr=0x0000000c, (1)[0x01234567]) [cmsis_dap_probe]
0089148 D _write_block32:000143 } [ap]
0089148 D trace: flush [cmsis_dap_probe]
0089148 D flush: sending cmd:32; reading 0 outstanding [dap_access_cmsis_dap]
0089148 D [cmd:32] _send_packet: sending [dap_access_cmsis_dap]
0089148 D   USB OUT> (13) 05 00 02 05 00 94 02 40 0d 67 45 23 01 [pyusb_backend]
0089150 D [cmd:33] New _Command [dap_access_cmsis_dap]
0089150 D [cmd:32] _read_packet: reading [dap_access_cmsis_dap]
0089151 D   USB IN < (64) 05 02 01 01 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00 b0 00 00 00 2b 00 00 00 00 00 00 00 0d 00 00 00 e0 00 00 00 05 00 00 00 b1 [pyusb_backend]
0089151 D   USB RD < (64) 05 02 01 01 00 01 01 00 00 00 00 00 00 00 00 00 00 00 00 03 00 00 00 b0 00 00 00 2b 00 00 00 00 00 00 00 0d 00 00 00 e0 00 00 00 05 00 00 00 b1 [pyusb_backend]